mysql> CREATE DATABASE Employee_Comission;
Query OK, 1 row affected (0.00 sec)

mysql> USE Employee_Comission;
Database changed

mysql> CREATE TABLE Departments ( ID SMALLINT NOT NULL PRIMARY KEY,
    -> Name VARCHAR(60) NOT NULL);
Query OK, 0 rows affected (0.17 sec)

mysql> INSERT INTO Departments VALUES (1, 'Banking'),
    -> (2, 'Insurance'),
    -> (3, 'Services');
Query OK, 3 rows affected (0.11 sec)
Records: 3  Duplicates: 0  Warnings: 0

mysql> SELECT * FROM Departments;
+----+-----------+
| ID | Name      |
+----+-----------+
|  1 | Banking   |
|  2 | Insurance |
|  3 | Services  |
+----+-----------+
3 rows in set (0.00 sec)

mysql> CREATE TABLE Employees ( ID SMALLINT NOT NULL PRIMARY KEY,
    -> Name VARCHAR(60) NOT NULL,
    -> Salary BIGINT NOT NULL,
    -> Department_id SMALLINT NOT NULL,
    -> FOREIGN KEY (Department_id) REFERENCES Departments(ID))
    -> engine= INNODB;
Query OK, 0 rows affected (0.17 sec)

mysql> INSERT INTO Employees VALUES (1, 'Chris Gayle', 1000000, 1),
    -> (2, 'Michael Clark', 800000, 2),
    -> (3, 'Rahul Dravid', 700000, 1),
    -> (4, 'Ricky Ponting', 600000, 2),
    -> (5, 'Albie Morkel', 650000, 2),
    -> (6, 'Wasim Akram', 750000, 3);
Query OK, 6 rows affected (0.01 sec)
Records: 6  Duplicates: 0  Warnings: 0

mysql> select * from Employees;
+----+---------------+---------+---------------+
| ID | Name          | Salary  | Department_id |
+----+---------------+---------+---------------+
|  1 | Chris Gayle   | 1000000 |             1 |
|  2 | Michael Clark |  800000 |             2 |
|  3 | Rahul Dravid  |  700000 |             1 |
|  4 | Ricky Ponting |  600000 |             2 |
|  5 | Albie Morkel  |  650000 |             2 |
|  6 | Wasim Akram   |  750000 |             3 |
+----+---------------+---------+---------------+
6 rows in set (0.00 sec)

mysql> CREATE TABLE COMMISSIONS(ID SMALLINT NOT NULL PRIMARY KEY,
    -> Employee_id SMALLINT NOT NULL,
    -> Commission INTEGER NOT NULL,
    -> FOREIGN KEY(Employee_id) REFERENCES Employees(ID))
    -> engine=INNODB;
Query OK, 0 rows affected (0.17 sec)

mysql> INSERT INTO Commissions VALUES(1,1,5000),
    -> (2,2,3000),
    -> (3,3,4000),
    -> (4,1,4000),
    -> (5,2,3000),
    -> (6,4,2000),
    -> (7,5,1000),
    -> (8,6,5000);
Query OK, 8 rows affected (0.12 sec)
Records: 8  Duplicates: 0  Warnings: 0

mysql> SELECT * FROM Commissions;
+----+-------------+------------+
| ID | Employee_id | Commission |
+----+-------------+------------+
|  1 |           1 |       5000 |
|  2 |           2 |       3000 |
|  3 |           3 |       4000 |
|  4 |           1 |       4000 |
|  5 |           2 |       3000 |
|  6 |           4 |       2000 |
|  7 |           5 |       1000 |
|  8 |           6 |       5000 |
+----+-------------+------------+
8 rows in set (0.00 sec)

Questions: 
i. Find the employee who gets the highest total commission.
mysql> Create index Employee_idx on Employees(ID, Name);
Query OK, 0 rows affected (0.31 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> Create index Commission_idx on Commissions(Employee_id, Commission);
Query OK, 0 rows affected (0.34 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> select Employees.Id, Name, Sum(commission) as Total_Commission from Employees use index(Employee_idx)
    -> join Commissions use index(Commission_idx) on
    -> Employees.id=Commissions.employee_id
    -> group by Employees.id
    -> order by Total_Commission
    -> Limit 1;
+----+-------------+-----------------+
| Id | Name        | Total_Commission|
+----+-------------+-----------------+
|  1 | Chris Gayle |            9000 |
+----+-------------+-----------------+
1 row in set (0.00 sec)

ii. Find employee with 4th Highest salary from employee table.
mysql> select Name , salary from Employees e1
    -> where 4-1=(select count(Distinct Salary) from Employees e2
    -> where e2.salary>e1.salary);
+--------------+--------+
| Name         | salary |
+--------------+--------+
| Rahul Dravid | 700000 |
+--------------+--------+
1 row in set (0.05 sec)

iii. Find department that is giving highest commission.
mysql> select Departments.name, sum(Commission) as Total_Commission from Employees, Departments, Commissions
    -> where Departments.id=Employees.Department_id and Employees.id=Commissions.Employee_id
    -> group by Departments.name
    -> order by Total_Commission desc limit 1;
+---------+------------------+
| Name    | Total_Commission |
+---------+------------------+
| Banking |            13000 |
+---------+------------------+
1 row in set (0.00 sec)

iV. Find employees getting commission more than 3000
    Display Output in following pattern:  
      Chris Gayle, Rahul Dravid  4000

mysql> select group_concat(e.name) as Employees, c.commission from
    -> Employees as e inner join Commissions as c on e.id=c.employee_id
    -> group by c.commission
    -> having c.commission>3000;
+--------------------------+------------+
| Employees                | commission |
+--------------------------+------------+
| Chris Gayle,Rahul Dravid |       4000 |
| Wasim Akram,Chris Gayle  |       5000 |
+--------------------------+------------+
2 rows in set (0.00 sec)




